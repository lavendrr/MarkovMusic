Markov Music is a tuning/temperament-agnostic melody generation program written in Python. It outputs a melody of single notes from a given scale, which can be of any length and any temperament. Each note is calculated using a Markov chain - that is to say, each note has a set of probabilities for every possible note it could go to next. These probabilities are weighted such that the odds favor more consonant intervals. Consonant intervals are calculated by taking the ratio of the current note vs. every other note in the scale, then ordering them based on the smallest sum of numerator and denominator in the simplified ratio. The smaller the sum, the more "consonant", or closer to just/perfect intonation, the interval is. For instance, a just fifth with a ratio of 3/2 (3 + 2 = 5) is more consonant than a just third with a ratio of 5/4 (5 + 4 = 9). The most consonant interval is then assigned the highest probability, with each less consonant interval assigned a decreasing probability. These consonant intervals are calculated for any scale given, so it should theoretically function for any tuning system or even random sequences of notes. Additionally, the Markov matrix is resized to fit however many notes are in the scale, so scales of any length or number of divisions will still work. The resulting melody is then passed into a script that converts said frequencies into a .wav sound file, with parameters of BPM and tonality (square/sin).