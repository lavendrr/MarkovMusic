Markov Music is a tuning/temperament-agnostic music generation program written in Python. It outputs a melody of single notes from a given scale, which can be of any length and any temperament. Each note is calculated using a Markov chain - that is to say, each note has a set of probabilities for every possible note it could go to next. These probabilities are weighted such that the odds favor more consonant intervals. Consonant intervals are calculated by taking the ratio of the current note vs. every other note in the scale, then ordering them based on the smallest sum of numerator and denominator in the simplified ratio. The smaller the sum, the more "consonant", or closer to just/perfect intonation, the interval is. For instance, a just fifth with a ratio of 3/2 (3 + 2 = 5) is more consonant than a just third with a ratio of 5/4 (5 + 4 = 9). The most consonant interval is then assigned the highest probability, with each less consonant interval assigned a decreasing probability. These consonant intervals are calculated for any scale given, so it should theoretically function for any tuning system or even random sequences of notes. Additionally, the Markov matrix is resized to fit however many notes are in the scale, so scales of any length or number of divisions will still work. The resulting melody is then passed into a script that converts said frequencies into a .wav sound file, with parameters of BPM and tonality (square/sin). Additionally, a chord mode is also offered that utilizes the same consonance-based probability to generate a series of consonant two-note chords highlighting the harmonic characteristics of a given scale or temperament. The root note of each consecutive chord is calculated identically to the melody generation process (based on consonance with the current root note), but the second note of the chord is calculated based on the root of the same chord, resulting in a kind of "parallel" movement.

Interestingly, the results of the program when using a non-just scale, 12TET or otherwise, differs from what we might expect. Intervals that are rather unpleasant are weighted higher than ones we might subjectively prefer, yet they are still more consonant from a mathematical perspective. For instance, the perfect fifth in 12TET is weighted far lower than other intervals such as the second. This calls into question the validity of consonance as a mathematical quantification of the human psychoacoustic perception of a "good"-sounding chord. Despite the end results being unexpected and somewhat unpleasant to listen to, I consider the project a success in how it highlighted exactly how "dissonant" some intervals can be in equal temperament (even beyond what we might expect) and in its ability to serve as an exploration of the mathematical nuances of different tuning systems. Even if consonance is ultimately not a good quantification of what we humans find enjoyable, knowing as such is still a valuable takeaway. In the future, I'd love to see if consonance still plays a role at all when analyzing things through a more psychoacoustic lens - perhaps accounting more for critical bands or frequency response of the basilar membrane, etc. Regardless, it was a lot of fun and I encourage anyone to try out generating some pieces of "music" - you might find something interesting!
